Grammar

    0 $accept: program $end

    1 program: statements

    2 statements: thingThatCanHappen
    3           | funcs
    4           | COMENTARIOCONJUNTO
    5           | COMENTARIOCONJUNTO statements
    6           | COMENTARIOLINEA
    7           | COMENTARIOLINEA statements
    8           | thingThatCanHappen statements
    9           | funcs statements
   10           | error_handling
   11           | loopsAndThings

   12 error_handling: IDENTIFIER
   13               | COLON
   14               | etype
   15               | bcomparator
   16               | SUB
   17               | LPAREN
   18               | RPAREN
   19               | ADD
   20               | LBRACE
   21               | DIV
   22               | MUL
   23               | ASSIGN

   24 lbrace: LBRACE

   25 rbrace: RBRACE

   26 funcs: etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   27      | VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace

   28 declaration_list: lastdec
   29                 | declaration declaration_list
   30                 | ε

   31 lastdec: etype IDENTIFIER

   32 declaration: etype IDENTIFIER COLON

   33 thingThatCanHappen: statement
   34                   | IDENTIFIER ASSIGN expression SEMICOLON
   35                   | IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON

   36 funcCallList: expression
   37             | CHARVALUE
   38             | IDENTIFIER COLON funcCallList

   39 statement: etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON

   41 elseOp: ELSE lbrace felements rbrace

   42 loopsAndThings: IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | RETURN expression SEMICOLON
   46               | FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace

   47 felements: thingThatCanHappen
   48          | PRINT SEMICOLON
   49          | loopsAndThings
   50          | PRINT SEMICOLON felements
   51          | thingThatCanHappen felements
   52          | loopsAndThings felements
   53          | error_handling

   54 actualizacion: IDENTIFIER ADD ADD
   55              | IDENTIFIER SUB SUB
   56              | IDENTIFIER ASSIGN expression

   57 boolElement: IDENTIFIER bcomparator expression
   58            | IDENTIFIER

   59 bcomparator: EQ
   60            | NE
   61            | GE
   62            | GT
   63            | LE
   64            | LT

   65 expression: term
   66           | expression ADD term
   67           | expression SUB term

   68 term: factor
   69     | term MUL factor
   70     | term DIV factor

   71 factor: IDENTIFIER
   72       | INTEGER
   73       | LPAREN expression RPAREN

   74 etype: INT
   75      | FLOAT
   76      | DOUBLE
   77      | CHAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ADD (258) 19 54 66
    SUB (259) 16 55 67
    MUL (260) 22 69
    DIV (261) 21 70
    ASSIGN (262) 23 34 39 40 56
    SEMICOLON (263) 34 35 39 40 45 46 48 50
    LPAREN (264) 17 26 27 35 42 43 44 46 73
    RPAREN (265) 18 26 27 35 42 43 44 46 73
    INT (266) 74
    FLOAT (267) 75
    DOUBLE (268) 76
    CHAR (269) 77
    VOID (270) 27
    COLON (271) 13 32 38
    LBRACE (272) 20 24
    RBRACE (273) 25
    RETURN (274) 45
    IF (275) 42 43
    ELSE (276) 41
    WHILE (277) 44
    FOR (278) 46
    EQ (279) 59
    NE (280) 60
    GE (281) 61
    GT (282) 62
    LE (283) 63
    LT (284) 64
    IDENTIFIER <string> (285) 12 26 27 31 32 34 35 38 39 40 54 55 56 57 58 71
    INTEGER <string> (286) 72
    CHARVALUE <string> (287) 37 40
    COMENTARIOCONJUNTO <string> (288) 4 5
    COMENTARIOLINEA <string> (289) 6 7
    PRINT <string> (290) 48 50


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program (37)
        on left: 1
        on right: 0
    statements <string> (38)
        on left: 2 3 4 5 6 7 8 9 10 11
        on right: 1 5 7 8 9
    error_handling (39)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 10 53
    lbrace (40)
        on left: 24
        on right: 26 27 41 42 43 44 46
    rbrace (41)
        on left: 25
        on right: 26 27 41 42 43 44 46
    funcs <string> (42)
        on left: 26 27
        on right: 3 9
    declaration_list <string> (43)
        on left: 28 29 30
        on right: 26 27 29
    lastdec <string> (44)
        on left: 31
        on right: 28
    declaration <string> (45)
        on left: 32
        on right: 29
    thingThatCanHappen <string> (46)
        on left: 33 34 35
        on right: 2 8 47 51
    funcCallList <string> (47)
        on left: 36 37 38
        on right: 35 38
    statement <string> (48)
        on left: 39 40
        on right: 33 46
    elseOp <string> (49)
        on left: 41
        on right: 42
    loopsAndThings <string> (50)
        on left: 42 43 44 45 46
        on right: 11 49 52
    felements <string> (51)
        on left: 47 48 49 50 51 52 53
        on right: 26 27 41 42 43 44 46 50 51 52
    actualizacion <string> (52)
        on left: 54 55 56
        on right: 46
    boolElement <string> (53)
        on left: 57 58
        on right: 42 43 44 46
    bcomparator <string> (54)
        on left: 59 60 61 62 63 64
        on right: 15 57
    expression <string> (55)
        on left: 65 66 67
        on right: 34 36 39 45 56 57 66 67 73
    term <string> (56)
        on left: 68 69 70
        on right: 65 66 67 69 70
    factor <string> (57)
        on left: 71 72 73
        on right: 68 69 70
    etype <string> (58)
        on left: 74 75 76 77
        on right: 14 26 31 32 39 40


State 0

    0 $accept: • program $end
    1 program: • statements
    2 statements: • thingThatCanHappen
    3           | • funcs
    4           | • COMENTARIOCONJUNTO
    5           | • COMENTARIOCONJUNTO statements
    6           | • COMENTARIOLINEA
    7           | • COMENTARIOLINEA statements
    8           | • thingThatCanHappen statements
    9           | • funcs statements
   10           | • error_handling
   11           | • loopsAndThings
   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   26 funcs: • etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   27      | • VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD                 shift, and go to state 1
    SUB                 shift, and go to state 2
    MUL                 shift, and go to state 3
    DIV                 shift, and go to state 4
    ASSIGN              shift, and go to state 5
    LPAREN              shift, and go to state 6
    RPAREN              shift, and go to state 7
    INT                 shift, and go to state 8
    FLOAT               shift, and go to state 9
    DOUBLE              shift, and go to state 10
    CHAR                shift, and go to state 11
    VOID                shift, and go to state 12
    COLON               shift, and go to state 13
    LBRACE              shift, and go to state 14
    RETURN              shift, and go to state 15
    IF                  shift, and go to state 16
    WHILE               shift, and go to state 17
    FOR                 shift, and go to state 18
    EQ                  shift, and go to state 19
    NE                  shift, and go to state 20
    GE                  shift, and go to state 21
    GT                  shift, and go to state 22
    LE                  shift, and go to state 23
    LT                  shift, and go to state 24
    IDENTIFIER          shift, and go to state 25
    COMENTARIOCONJUNTO  shift, and go to state 26
    COMENTARIOLINEA     shift, and go to state 27

    program             go to state 28
    statements          go to state 29
    error_handling      go to state 30
    funcs               go to state 31
    thingThatCanHappen  go to state 32
    statement           go to state 33
    loopsAndThings      go to state 34
    bcomparator         go to state 35
    etype               go to state 36


State 1

   19 error_handling: ADD •

    $default  reduce using rule 19 (error_handling)


State 2

   16 error_handling: SUB •

    $default  reduce using rule 16 (error_handling)


State 3

   22 error_handling: MUL •

    $default  reduce using rule 22 (error_handling)


State 4

   21 error_handling: DIV •

    $default  reduce using rule 21 (error_handling)


State 5

   23 error_handling: ASSIGN •

    $default  reduce using rule 23 (error_handling)


State 6

   17 error_handling: LPAREN •

    $default  reduce using rule 17 (error_handling)


State 7

   18 error_handling: RPAREN •

    $default  reduce using rule 18 (error_handling)


State 8

   74 etype: INT •

    $default  reduce using rule 74 (etype)


State 9

   75 etype: FLOAT •

    $default  reduce using rule 75 (etype)


State 10

   76 etype: DOUBLE •

    $default  reduce using rule 76 (etype)


State 11

   77 etype: CHAR •

    $default  reduce using rule 77 (etype)


State 12

   27 funcs: VOID • IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace

    IDENTIFIER  shift, and go to state 37


State 13

   13 error_handling: COLON •

    $default  reduce using rule 13 (error_handling)


State 14

   20 error_handling: LBRACE •

    $default  reduce using rule 20 (error_handling)


State 15

   45 loopsAndThings: RETURN • expression SEMICOLON
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    expression  go to state 41
    term        go to state 42
    factor      go to state 43


State 16

   42 loopsAndThings: IF • LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | IF • LPAREN boolElement RPAREN lbrace felements rbrace

    LPAREN  shift, and go to state 44


State 17

   44 loopsAndThings: WHILE • LPAREN boolElement RPAREN lbrace felements rbrace

    LPAREN  shift, and go to state 45


State 18

   46 loopsAndThings: FOR • LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace

    LPAREN  shift, and go to state 46


State 19

   59 bcomparator: EQ •

    $default  reduce using rule 59 (bcomparator)


State 20

   60 bcomparator: NE •

    $default  reduce using rule 60 (bcomparator)


State 21

   61 bcomparator: GE •

    $default  reduce using rule 61 (bcomparator)


State 22

   62 bcomparator: GT •

    $default  reduce using rule 62 (bcomparator)


State 23

   63 bcomparator: LE •

    $default  reduce using rule 63 (bcomparator)


State 24

   64 bcomparator: LT •

    $default  reduce using rule 64 (bcomparator)


State 25

   12 error_handling: IDENTIFIER •  [$end, RBRACE]
   34 thingThatCanHappen: IDENTIFIER • ASSIGN expression SEMICOLON
   35                   | IDENTIFIER • LPAREN funcCallList RPAREN SEMICOLON

    ASSIGN  shift, and go to state 47
    LPAREN  shift, and go to state 48

    $default  reduce using rule 12 (error_handling)


State 26

    2 statements: • thingThatCanHappen
    3           | • funcs
    4           | • COMENTARIOCONJUNTO
    4           | COMENTARIOCONJUNTO •  [$end]
    5           | • COMENTARIOCONJUNTO statements
    5           | COMENTARIOCONJUNTO • statements
    6           | • COMENTARIOLINEA
    7           | • COMENTARIOLINEA statements
    8           | • thingThatCanHappen statements
    9           | • funcs statements
   10           | • error_handling
   11           | • loopsAndThings
   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   26 funcs: • etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   27      | • VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD                 shift, and go to state 1
    SUB                 shift, and go to state 2
    MUL                 shift, and go to state 3
    DIV                 shift, and go to state 4
    ASSIGN              shift, and go to state 5
    LPAREN              shift, and go to state 6
    RPAREN              shift, and go to state 7
    INT                 shift, and go to state 8
    FLOAT               shift, and go to state 9
    DOUBLE              shift, and go to state 10
    CHAR                shift, and go to state 11
    VOID                shift, and go to state 12
    COLON               shift, and go to state 13
    LBRACE              shift, and go to state 14
    RETURN              shift, and go to state 15
    IF                  shift, and go to state 16
    WHILE               shift, and go to state 17
    FOR                 shift, and go to state 18
    EQ                  shift, and go to state 19
    NE                  shift, and go to state 20
    GE                  shift, and go to state 21
    GT                  shift, and go to state 22
    LE                  shift, and go to state 23
    LT                  shift, and go to state 24
    IDENTIFIER          shift, and go to state 25
    COMENTARIOCONJUNTO  shift, and go to state 26
    COMENTARIOLINEA     shift, and go to state 27

    $default  reduce using rule 4 (statements)

    statements          go to state 49
    error_handling      go to state 30
    funcs               go to state 31
    thingThatCanHappen  go to state 32
    statement           go to state 33
    loopsAndThings      go to state 34
    bcomparator         go to state 35
    etype               go to state 36


State 27

    2 statements: • thingThatCanHappen
    3           | • funcs
    4           | • COMENTARIOCONJUNTO
    5           | • COMENTARIOCONJUNTO statements
    6           | • COMENTARIOLINEA
    6           | COMENTARIOLINEA •  [$end]
    7           | • COMENTARIOLINEA statements
    7           | COMENTARIOLINEA • statements
    8           | • thingThatCanHappen statements
    9           | • funcs statements
   10           | • error_handling
   11           | • loopsAndThings
   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   26 funcs: • etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   27      | • VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD                 shift, and go to state 1
    SUB                 shift, and go to state 2
    MUL                 shift, and go to state 3
    DIV                 shift, and go to state 4
    ASSIGN              shift, and go to state 5
    LPAREN              shift, and go to state 6
    RPAREN              shift, and go to state 7
    INT                 shift, and go to state 8
    FLOAT               shift, and go to state 9
    DOUBLE              shift, and go to state 10
    CHAR                shift, and go to state 11
    VOID                shift, and go to state 12
    COLON               shift, and go to state 13
    LBRACE              shift, and go to state 14
    RETURN              shift, and go to state 15
    IF                  shift, and go to state 16
    WHILE               shift, and go to state 17
    FOR                 shift, and go to state 18
    EQ                  shift, and go to state 19
    NE                  shift, and go to state 20
    GE                  shift, and go to state 21
    GT                  shift, and go to state 22
    LE                  shift, and go to state 23
    LT                  shift, and go to state 24
    IDENTIFIER          shift, and go to state 25
    COMENTARIOCONJUNTO  shift, and go to state 26
    COMENTARIOLINEA     shift, and go to state 27

    $default  reduce using rule 6 (statements)

    statements          go to state 50
    error_handling      go to state 30
    funcs               go to state 31
    thingThatCanHappen  go to state 32
    statement           go to state 33
    loopsAndThings      go to state 34
    bcomparator         go to state 35
    etype               go to state 36


State 28

    0 $accept: program • $end

    $end  shift, and go to state 51


State 29

    1 program: statements •

    $default  reduce using rule 1 (program)


State 30

   10 statements: error_handling •

    $default  reduce using rule 10 (statements)


State 31

    2 statements: • thingThatCanHappen
    3           | • funcs
    3           | funcs •  [$end]
    4           | • COMENTARIOCONJUNTO
    5           | • COMENTARIOCONJUNTO statements
    6           | • COMENTARIOLINEA
    7           | • COMENTARIOLINEA statements
    8           | • thingThatCanHappen statements
    9           | • funcs statements
    9           | funcs • statements
   10           | • error_handling
   11           | • loopsAndThings
   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   26 funcs: • etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   27      | • VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD                 shift, and go to state 1
    SUB                 shift, and go to state 2
    MUL                 shift, and go to state 3
    DIV                 shift, and go to state 4
    ASSIGN              shift, and go to state 5
    LPAREN              shift, and go to state 6
    RPAREN              shift, and go to state 7
    INT                 shift, and go to state 8
    FLOAT               shift, and go to state 9
    DOUBLE              shift, and go to state 10
    CHAR                shift, and go to state 11
    VOID                shift, and go to state 12
    COLON               shift, and go to state 13
    LBRACE              shift, and go to state 14
    RETURN              shift, and go to state 15
    IF                  shift, and go to state 16
    WHILE               shift, and go to state 17
    FOR                 shift, and go to state 18
    EQ                  shift, and go to state 19
    NE                  shift, and go to state 20
    GE                  shift, and go to state 21
    GT                  shift, and go to state 22
    LE                  shift, and go to state 23
    LT                  shift, and go to state 24
    IDENTIFIER          shift, and go to state 25
    COMENTARIOCONJUNTO  shift, and go to state 26
    COMENTARIOLINEA     shift, and go to state 27

    $default  reduce using rule 3 (statements)

    statements          go to state 52
    error_handling      go to state 30
    funcs               go to state 31
    thingThatCanHappen  go to state 32
    statement           go to state 33
    loopsAndThings      go to state 34
    bcomparator         go to state 35
    etype               go to state 36


State 32

    2 statements: • thingThatCanHappen
    2           | thingThatCanHappen •  [$end]
    3           | • funcs
    4           | • COMENTARIOCONJUNTO
    5           | • COMENTARIOCONJUNTO statements
    6           | • COMENTARIOLINEA
    7           | • COMENTARIOLINEA statements
    8           | • thingThatCanHappen statements
    8           | thingThatCanHappen • statements
    9           | • funcs statements
   10           | • error_handling
   11           | • loopsAndThings
   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   26 funcs: • etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   27      | • VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD                 shift, and go to state 1
    SUB                 shift, and go to state 2
    MUL                 shift, and go to state 3
    DIV                 shift, and go to state 4
    ASSIGN              shift, and go to state 5
    LPAREN              shift, and go to state 6
    RPAREN              shift, and go to state 7
    INT                 shift, and go to state 8
    FLOAT               shift, and go to state 9
    DOUBLE              shift, and go to state 10
    CHAR                shift, and go to state 11
    VOID                shift, and go to state 12
    COLON               shift, and go to state 13
    LBRACE              shift, and go to state 14
    RETURN              shift, and go to state 15
    IF                  shift, and go to state 16
    WHILE               shift, and go to state 17
    FOR                 shift, and go to state 18
    EQ                  shift, and go to state 19
    NE                  shift, and go to state 20
    GE                  shift, and go to state 21
    GT                  shift, and go to state 22
    LE                  shift, and go to state 23
    LT                  shift, and go to state 24
    IDENTIFIER          shift, and go to state 25
    COMENTARIOCONJUNTO  shift, and go to state 26
    COMENTARIOLINEA     shift, and go to state 27

    $default  reduce using rule 2 (statements)

    statements          go to state 53
    error_handling      go to state 30
    funcs               go to state 31
    thingThatCanHappen  go to state 32
    statement           go to state 33
    loopsAndThings      go to state 34
    bcomparator         go to state 35
    etype               go to state 36


State 33

   33 thingThatCanHappen: statement •

    $default  reduce using rule 33 (thingThatCanHappen)


State 34

   11 statements: loopsAndThings •

    $default  reduce using rule 11 (statements)


State 35

   15 error_handling: bcomparator •

    $default  reduce using rule 15 (error_handling)


State 36

   14 error_handling: etype •  [$end]
   26 funcs: etype • IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace
   39 statement: etype • IDENTIFIER ASSIGN expression SEMICOLON
   40          | etype • IDENTIFIER ASSIGN CHARVALUE SEMICOLON

    IDENTIFIER  shift, and go to state 54

    $default  reduce using rule 14 (error_handling)


State 37

   27 funcs: VOID IDENTIFIER • LPAREN declaration_list RPAREN lbrace felements rbrace

    LPAREN  shift, and go to state 55


State 38

   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN
   73       | LPAREN • expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    expression  go to state 56
    term        go to state 42
    factor      go to state 43


State 39

   71 factor: IDENTIFIER •

    $default  reduce using rule 71 (factor)


State 40

   72 factor: INTEGER •

    $default  reduce using rule 72 (factor)


State 41

   45 loopsAndThings: RETURN expression • SEMICOLON
   66 expression: expression • ADD term
   67           | expression • SUB term

    ADD        shift, and go to state 57
    SUB        shift, and go to state 58
    SEMICOLON  shift, and go to state 59


State 42

   65 expression: term •  [ADD, SUB, SEMICOLON, RPAREN]
   69 term: term • MUL factor
   70     | term • DIV factor

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61

    $default  reduce using rule 65 (expression)


State 43

   68 term: factor •

    $default  reduce using rule 68 (term)


State 44

   42 loopsAndThings: IF LPAREN • boolElement RPAREN lbrace felements rbrace elseOp
   43               | IF LPAREN • boolElement RPAREN lbrace felements rbrace
   57 boolElement: • IDENTIFIER bcomparator expression
   58            | • IDENTIFIER

    IDENTIFIER  shift, and go to state 62

    boolElement  go to state 63


State 45

   44 loopsAndThings: WHILE LPAREN • boolElement RPAREN lbrace felements rbrace
   57 boolElement: • IDENTIFIER bcomparator expression
   58            | • IDENTIFIER

    IDENTIFIER  shift, and go to state 62

    boolElement  go to state 64


State 46

   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   46 loopsAndThings: FOR LPAREN • statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    DOUBLE  shift, and go to state 10
    CHAR    shift, and go to state 11

    statement  go to state 65
    etype      go to state 66


State 47

   34 thingThatCanHappen: IDENTIFIER ASSIGN • expression SEMICOLON
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    expression  go to state 67
    term        go to state 42
    factor      go to state 43


State 48

   35 thingThatCanHappen: IDENTIFIER LPAREN • funcCallList RPAREN SEMICOLON
   36 funcCallList: • expression
   37             | • CHARVALUE
   38             | • IDENTIFIER COLON funcCallList
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 68
    INTEGER     shift, and go to state 40
    CHARVALUE   shift, and go to state 69

    funcCallList  go to state 70
    expression    go to state 71
    term          go to state 42
    factor        go to state 43


State 49

    5 statements: COMENTARIOCONJUNTO statements •

    $default  reduce using rule 5 (statements)


State 50

    7 statements: COMENTARIOLINEA statements •

    $default  reduce using rule 7 (statements)


State 51

    0 $accept: program $end •

    $default  accept


State 52

    9 statements: funcs statements •

    $default  reduce using rule 9 (statements)


State 53

    8 statements: thingThatCanHappen statements •

    $default  reduce using rule 8 (statements)


State 54

   26 funcs: etype IDENTIFIER • LPAREN declaration_list RPAREN lbrace felements rbrace
   39 statement: etype IDENTIFIER • ASSIGN expression SEMICOLON
   40          | etype IDENTIFIER • ASSIGN CHARVALUE SEMICOLON

    ASSIGN  shift, and go to state 72
    LPAREN  shift, and go to state 73


State 55

   27 funcs: VOID IDENTIFIER LPAREN • declaration_list RPAREN lbrace felements rbrace
   28 declaration_list: • lastdec
   29                 | • declaration declaration_list
   30                 | ε •  [RPAREN]
   31 lastdec: • etype IDENTIFIER
   32 declaration: • etype IDENTIFIER COLON
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    DOUBLE  shift, and go to state 10
    CHAR    shift, and go to state 11

    $default  reduce using rule 30 (declaration_list)

    declaration_list  go to state 74
    lastdec           go to state 75
    declaration       go to state 76
    etype             go to state 77


State 56

   66 expression: expression • ADD term
   67           | expression • SUB term
   73 factor: LPAREN expression • RPAREN

    ADD     shift, and go to state 57
    SUB     shift, and go to state 58
    RPAREN  shift, and go to state 78


State 57

   66 expression: expression ADD • term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    term    go to state 79
    factor  go to state 43


State 58

   67 expression: expression SUB • term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    term    go to state 80
    factor  go to state 43


State 59

   45 loopsAndThings: RETURN expression SEMICOLON •

    $default  reduce using rule 45 (loopsAndThings)


State 60

   69 term: term MUL • factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    factor  go to state 81


State 61

   70 term: term DIV • factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    factor  go to state 82


State 62

   57 boolElement: IDENTIFIER • bcomparator expression
   58            | IDENTIFIER •  [SEMICOLON, RPAREN]
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT

    EQ  shift, and go to state 19
    NE  shift, and go to state 20
    GE  shift, and go to state 21
    GT  shift, and go to state 22
    LE  shift, and go to state 23
    LT  shift, and go to state 24

    $default  reduce using rule 58 (boolElement)

    bcomparator  go to state 83


State 63

   42 loopsAndThings: IF LPAREN boolElement • RPAREN lbrace felements rbrace elseOp
   43               | IF LPAREN boolElement • RPAREN lbrace felements rbrace

    RPAREN  shift, and go to state 84


State 64

   44 loopsAndThings: WHILE LPAREN boolElement • RPAREN lbrace felements rbrace

    RPAREN  shift, and go to state 85


State 65

   46 loopsAndThings: FOR LPAREN statement • boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   57 boolElement: • IDENTIFIER bcomparator expression
   58            | • IDENTIFIER

    IDENTIFIER  shift, and go to state 62

    boolElement  go to state 86


State 66

   39 statement: etype • IDENTIFIER ASSIGN expression SEMICOLON
   40          | etype • IDENTIFIER ASSIGN CHARVALUE SEMICOLON

    IDENTIFIER  shift, and go to state 87


State 67

   34 thingThatCanHappen: IDENTIFIER ASSIGN expression • SEMICOLON
   66 expression: expression • ADD term
   67           | expression • SUB term

    ADD        shift, and go to state 57
    SUB        shift, and go to state 58
    SEMICOLON  shift, and go to state 88


State 68

   38 funcCallList: IDENTIFIER • COLON funcCallList
   71 factor: IDENTIFIER •  [ADD, SUB, MUL, DIV, RPAREN]

    COLON  shift, and go to state 89

    $default  reduce using rule 71 (factor)


State 69

   37 funcCallList: CHARVALUE •

    $default  reduce using rule 37 (funcCallList)


State 70

   35 thingThatCanHappen: IDENTIFIER LPAREN funcCallList • RPAREN SEMICOLON

    RPAREN  shift, and go to state 90


State 71

   36 funcCallList: expression •  [RPAREN]
   66 expression: expression • ADD term
   67           | expression • SUB term

    ADD  shift, and go to state 57
    SUB  shift, and go to state 58

    $default  reduce using rule 36 (funcCallList)


State 72

   39 statement: etype IDENTIFIER ASSIGN • expression SEMICOLON
   40          | etype IDENTIFIER ASSIGN • CHARVALUE SEMICOLON
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40
    CHARVALUE   shift, and go to state 91

    expression  go to state 92
    term        go to state 42
    factor      go to state 43


State 73

   26 funcs: etype IDENTIFIER LPAREN • declaration_list RPAREN lbrace felements rbrace
   28 declaration_list: • lastdec
   29                 | • declaration declaration_list
   30                 | ε •  [RPAREN]
   31 lastdec: • etype IDENTIFIER
   32 declaration: • etype IDENTIFIER COLON
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    DOUBLE  shift, and go to state 10
    CHAR    shift, and go to state 11

    $default  reduce using rule 30 (declaration_list)

    declaration_list  go to state 93
    lastdec           go to state 75
    declaration       go to state 76
    etype             go to state 77


State 74

   27 funcs: VOID IDENTIFIER LPAREN declaration_list • RPAREN lbrace felements rbrace

    RPAREN  shift, and go to state 94


State 75

   28 declaration_list: lastdec •

    $default  reduce using rule 28 (declaration_list)


State 76

   28 declaration_list: • lastdec
   29                 | • declaration declaration_list
   29                 | declaration • declaration_list
   30                 | ε •  [RPAREN]
   31 lastdec: • etype IDENTIFIER
   32 declaration: • etype IDENTIFIER COLON
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    INT     shift, and go to state 8
    FLOAT   shift, and go to state 9
    DOUBLE  shift, and go to state 10
    CHAR    shift, and go to state 11

    $default  reduce using rule 30 (declaration_list)

    declaration_list  go to state 95
    lastdec           go to state 75
    declaration       go to state 76
    etype             go to state 77


State 77

   31 lastdec: etype • IDENTIFIER
   32 declaration: etype • IDENTIFIER COLON

    IDENTIFIER  shift, and go to state 96


State 78

   73 factor: LPAREN expression RPAREN •

    $default  reduce using rule 73 (factor)


State 79

   66 expression: expression ADD term •  [ADD, SUB, SEMICOLON, RPAREN]
   69 term: term • MUL factor
   70     | term • DIV factor

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61

    $default  reduce using rule 66 (expression)


State 80

   67 expression: expression SUB term •  [ADD, SUB, SEMICOLON, RPAREN]
   69 term: term • MUL factor
   70     | term • DIV factor

    MUL  shift, and go to state 60
    DIV  shift, and go to state 61

    $default  reduce using rule 67 (expression)


State 81

   69 term: term MUL factor •

    $default  reduce using rule 69 (term)


State 82

   70 term: term DIV factor •

    $default  reduce using rule 70 (term)


State 83

   57 boolElement: IDENTIFIER bcomparator • expression
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    expression  go to state 97
    term        go to state 42
    factor      go to state 43


State 84

   24 lbrace: • LBRACE
   42 loopsAndThings: IF LPAREN boolElement RPAREN • lbrace felements rbrace elseOp
   43               | IF LPAREN boolElement RPAREN • lbrace felements rbrace

    LBRACE  shift, and go to state 98

    lbrace  go to state 99


State 85

   24 lbrace: • LBRACE
   44 loopsAndThings: WHILE LPAREN boolElement RPAREN • lbrace felements rbrace

    LBRACE  shift, and go to state 98

    lbrace  go to state 100


State 86

   46 loopsAndThings: FOR LPAREN statement boolElement • SEMICOLON actualizacion RPAREN lbrace felements rbrace

    SEMICOLON  shift, and go to state 101


State 87

   39 statement: etype IDENTIFIER • ASSIGN expression SEMICOLON
   40          | etype IDENTIFIER • ASSIGN CHARVALUE SEMICOLON

    ASSIGN  shift, and go to state 72


State 88

   34 thingThatCanHappen: IDENTIFIER ASSIGN expression SEMICOLON •

    $default  reduce using rule 34 (thingThatCanHappen)


State 89

   36 funcCallList: • expression
   37             | • CHARVALUE
   38             | • IDENTIFIER COLON funcCallList
   38             | IDENTIFIER COLON • funcCallList
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 68
    INTEGER     shift, and go to state 40
    CHARVALUE   shift, and go to state 69

    funcCallList  go to state 102
    expression    go to state 71
    term          go to state 42
    factor        go to state 43


State 90

   35 thingThatCanHappen: IDENTIFIER LPAREN funcCallList RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 91

   40 statement: etype IDENTIFIER ASSIGN CHARVALUE • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 92

   39 statement: etype IDENTIFIER ASSIGN expression • SEMICOLON
   66 expression: expression • ADD term
   67           | expression • SUB term

    ADD        shift, and go to state 57
    SUB        shift, and go to state 58
    SEMICOLON  shift, and go to state 105


State 93

   26 funcs: etype IDENTIFIER LPAREN declaration_list • RPAREN lbrace felements rbrace

    RPAREN  shift, and go to state 106


State 94

   24 lbrace: • LBRACE
   27 funcs: VOID IDENTIFIER LPAREN declaration_list RPAREN • lbrace felements rbrace

    LBRACE  shift, and go to state 98

    lbrace  go to state 107


State 95

   29 declaration_list: declaration declaration_list •

    $default  reduce using rule 29 (declaration_list)


State 96

   31 lastdec: etype IDENTIFIER •  [RPAREN]
   32 declaration: etype IDENTIFIER • COLON

    COLON  shift, and go to state 108

    $default  reduce using rule 31 (lastdec)


State 97

   57 boolElement: IDENTIFIER bcomparator expression •  [SEMICOLON, RPAREN]
   66 expression: expression • ADD term
   67           | expression • SUB term

    ADD  shift, and go to state 57
    SUB  shift, and go to state 58

    $default  reduce using rule 57 (boolElement)


State 98

   24 lbrace: LBRACE •

    $default  reduce using rule 24 (lbrace)


State 99

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   42               | IF LPAREN boolElement RPAREN lbrace • felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   43               | IF LPAREN boolElement RPAREN lbrace • felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 113
    bcomparator         go to state 35
    etype               go to state 114


State 100

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   44               | WHILE LPAREN boolElement RPAREN lbrace • felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 115
    bcomparator         go to state 35
    etype               go to state 114


State 101

   46 loopsAndThings: FOR LPAREN statement boolElement SEMICOLON • actualizacion RPAREN lbrace felements rbrace
   54 actualizacion: • IDENTIFIER ADD ADD
   55              | • IDENTIFIER SUB SUB
   56              | • IDENTIFIER ASSIGN expression

    IDENTIFIER  shift, and go to state 116

    actualizacion  go to state 117


State 102

   38 funcCallList: IDENTIFIER COLON funcCallList •

    $default  reduce using rule 38 (funcCallList)


State 103

   35 thingThatCanHappen: IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON •

    $default  reduce using rule 35 (thingThatCanHappen)


State 104

   40 statement: etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON •

    $default  reduce using rule 40 (statement)


State 105

   39 statement: etype IDENTIFIER ASSIGN expression SEMICOLON •

    $default  reduce using rule 39 (statement)


State 106

   24 lbrace: • LBRACE
   26 funcs: etype IDENTIFIER LPAREN declaration_list RPAREN • lbrace felements rbrace

    LBRACE  shift, and go to state 98

    lbrace  go to state 118


State 107

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   27 funcs: VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace • felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 119
    bcomparator         go to state 35
    etype               go to state 114


State 108

   32 declaration: etype IDENTIFIER COLON •

    $default  reduce using rule 32 (declaration)


State 109

   48 felements: PRINT • SEMICOLON
   50          | PRINT • SEMICOLON felements

    SEMICOLON  shift, and go to state 120


State 110

   53 felements: error_handling •

    $default  reduce using rule 53 (felements)


State 111

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   47          | thingThatCanHappen •  [RBRACE]
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   51          | thingThatCanHappen • felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    $default  reduce using rule 47 (felements)

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 121
    bcomparator         go to state 35
    etype               go to state 114


State 112

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   49          | loopsAndThings •  [RBRACE]
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   52          | loopsAndThings • felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    $default  reduce using rule 49 (felements)

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 122
    bcomparator         go to state 35
    etype               go to state 114


State 113

   25 rbrace: • RBRACE
   42 loopsAndThings: IF LPAREN boolElement RPAREN lbrace felements • rbrace elseOp
   43               | IF LPAREN boolElement RPAREN lbrace felements • rbrace

    RBRACE  shift, and go to state 123

    rbrace  go to state 124


State 114

   14 error_handling: etype •  [RBRACE]
   39 statement: etype • IDENTIFIER ASSIGN expression SEMICOLON
   40          | etype • IDENTIFIER ASSIGN CHARVALUE SEMICOLON

    IDENTIFIER  shift, and go to state 87

    $default  reduce using rule 14 (error_handling)


State 115

   25 rbrace: • RBRACE
   44 loopsAndThings: WHILE LPAREN boolElement RPAREN lbrace felements • rbrace

    RBRACE  shift, and go to state 123

    rbrace  go to state 125


State 116

   54 actualizacion: IDENTIFIER • ADD ADD
   55              | IDENTIFIER • SUB SUB
   56              | IDENTIFIER • ASSIGN expression

    ADD     shift, and go to state 126
    SUB     shift, and go to state 127
    ASSIGN  shift, and go to state 128


State 117

   46 loopsAndThings: FOR LPAREN statement boolElement SEMICOLON actualizacion • RPAREN lbrace felements rbrace

    RPAREN  shift, and go to state 129


State 118

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   26 funcs: etype IDENTIFIER LPAREN declaration_list RPAREN lbrace • felements rbrace
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 130
    bcomparator         go to state 35
    etype               go to state 114


State 119

   25 rbrace: • RBRACE
   27 funcs: VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements • rbrace

    RBRACE  shift, and go to state 123

    rbrace  go to state 131


State 120

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   48          | PRINT SEMICOLON •  [RBRACE]
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   50          | PRINT SEMICOLON • felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    $default  reduce using rule 48 (felements)

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 132
    bcomparator         go to state 35
    etype               go to state 114


State 121

   51 felements: thingThatCanHappen felements •

    $default  reduce using rule 51 (felements)


State 122

   52 felements: loopsAndThings felements •

    $default  reduce using rule 52 (felements)


State 123

   25 rbrace: RBRACE •

    $default  reduce using rule 25 (rbrace)


State 124

   41 elseOp: • ELSE lbrace felements rbrace
   42 loopsAndThings: IF LPAREN boolElement RPAREN lbrace felements rbrace • elseOp
   43               | IF LPAREN boolElement RPAREN lbrace felements rbrace •  [$end, ADD, SUB, MUL, DIV, ASSIGN, LPAREN, RPAREN, INT, FLOAT, DOUBLE, CHAR, COLON, LBRACE, RBRACE, RETURN, IF, WHILE, FOR, EQ, NE, GE, GT, LE, LT, IDENTIFIER, PRINT]

    ELSE  shift, and go to state 133

    $default  reduce using rule 43 (loopsAndThings)

    elseOp  go to state 134


State 125

   44 loopsAndThings: WHILE LPAREN boolElement RPAREN lbrace felements rbrace •

    $default  reduce using rule 44 (loopsAndThings)


State 126

   54 actualizacion: IDENTIFIER ADD • ADD

    ADD  shift, and go to state 135


State 127

   55 actualizacion: IDENTIFIER SUB • SUB

    SUB  shift, and go to state 136


State 128

   56 actualizacion: IDENTIFIER ASSIGN • expression
   65 expression: • term
   66           | • expression ADD term
   67           | • expression SUB term
   68 term: • factor
   69     | • term MUL factor
   70     | • term DIV factor
   71 factor: • IDENTIFIER
   72       | • INTEGER
   73       | • LPAREN expression RPAREN

    LPAREN      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    INTEGER     shift, and go to state 40

    expression  go to state 137
    term        go to state 42
    factor      go to state 43


State 129

   24 lbrace: • LBRACE
   46 loopsAndThings: FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN • lbrace felements rbrace

    LBRACE  shift, and go to state 98

    lbrace  go to state 138


State 130

   25 rbrace: • RBRACE
   26 funcs: etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements • rbrace

    RBRACE  shift, and go to state 123

    rbrace  go to state 139


State 131

   27 funcs: VOID IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace •

    $default  reduce using rule 27 (funcs)


State 132

   50 felements: PRINT SEMICOLON felements •

    $default  reduce using rule 50 (felements)


State 133

   24 lbrace: • LBRACE
   41 elseOp: ELSE • lbrace felements rbrace

    LBRACE  shift, and go to state 98

    lbrace  go to state 140


State 134

   42 loopsAndThings: IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp •

    $default  reduce using rule 42 (loopsAndThings)


State 135

   54 actualizacion: IDENTIFIER ADD ADD •

    $default  reduce using rule 54 (actualizacion)


State 136

   55 actualizacion: IDENTIFIER SUB SUB •

    $default  reduce using rule 55 (actualizacion)


State 137

   56 actualizacion: IDENTIFIER ASSIGN expression •  [RPAREN]
   66 expression: expression • ADD term
   67           | expression • SUB term

    ADD  shift, and go to state 57
    SUB  shift, and go to state 58

    $default  reduce using rule 56 (actualizacion)


State 138

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   46               | FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace • felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 141
    bcomparator         go to state 35
    etype               go to state 114


State 139

   26 funcs: etype IDENTIFIER LPAREN declaration_list RPAREN lbrace felements rbrace •

    $default  reduce using rule 26 (funcs)


State 140

   12 error_handling: • IDENTIFIER
   13               | • COLON
   14               | • etype
   15               | • bcomparator
   16               | • SUB
   17               | • LPAREN
   18               | • RPAREN
   19               | • ADD
   20               | • LBRACE
   21               | • DIV
   22               | • MUL
   23               | • ASSIGN
   33 thingThatCanHappen: • statement
   34                   | • IDENTIFIER ASSIGN expression SEMICOLON
   35                   | • IDENTIFIER LPAREN funcCallList RPAREN SEMICOLON
   39 statement: • etype IDENTIFIER ASSIGN expression SEMICOLON
   40          | • etype IDENTIFIER ASSIGN CHARVALUE SEMICOLON
   41 elseOp: ELSE lbrace • felements rbrace
   42 loopsAndThings: • IF LPAREN boolElement RPAREN lbrace felements rbrace elseOp
   43               | • IF LPAREN boolElement RPAREN lbrace felements rbrace
   44               | • WHILE LPAREN boolElement RPAREN lbrace felements rbrace
   45               | • RETURN expression SEMICOLON
   46               | • FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace
   47 felements: • thingThatCanHappen
   48          | • PRINT SEMICOLON
   49          | • loopsAndThings
   50          | • PRINT SEMICOLON felements
   51          | • thingThatCanHappen felements
   52          | • loopsAndThings felements
   53          | • error_handling
   59 bcomparator: • EQ
   60            | • NE
   61            | • GE
   62            | • GT
   63            | • LE
   64            | • LT
   74 etype: • INT
   75      | • FLOAT
   76      | • DOUBLE
   77      | • CHAR

    ADD         shift, and go to state 1
    SUB         shift, and go to state 2
    MUL         shift, and go to state 3
    DIV         shift, and go to state 4
    ASSIGN      shift, and go to state 5
    LPAREN      shift, and go to state 6
    RPAREN      shift, and go to state 7
    INT         shift, and go to state 8
    FLOAT       shift, and go to state 9
    DOUBLE      shift, and go to state 10
    CHAR        shift, and go to state 11
    COLON       shift, and go to state 13
    LBRACE      shift, and go to state 14
    RETURN      shift, and go to state 15
    IF          shift, and go to state 16
    WHILE       shift, and go to state 17
    FOR         shift, and go to state 18
    EQ          shift, and go to state 19
    NE          shift, and go to state 20
    GE          shift, and go to state 21
    GT          shift, and go to state 22
    LE          shift, and go to state 23
    LT          shift, and go to state 24
    IDENTIFIER  shift, and go to state 25
    PRINT       shift, and go to state 109

    error_handling      go to state 110
    thingThatCanHappen  go to state 111
    statement           go to state 33
    loopsAndThings      go to state 112
    felements           go to state 142
    bcomparator         go to state 35
    etype               go to state 114


State 141

   25 rbrace: • RBRACE
   46 loopsAndThings: FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements • rbrace

    RBRACE  shift, and go to state 123

    rbrace  go to state 143


State 142

   25 rbrace: • RBRACE
   41 elseOp: ELSE lbrace felements • rbrace

    RBRACE  shift, and go to state 123

    rbrace  go to state 144


State 143

   46 loopsAndThings: FOR LPAREN statement boolElement SEMICOLON actualizacion RPAREN lbrace felements rbrace •

    $default  reduce using rule 46 (loopsAndThings)


State 144

   41 elseOp: ELSE lbrace felements rbrace •

    $default  reduce using rule 41 (elseOp)
